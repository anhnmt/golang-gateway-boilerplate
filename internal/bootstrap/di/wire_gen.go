// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"context"
	"github.com/anhnmt/golang-gateway-boilerplate/internal/gateway"
	"github.com/anhnmt/golang-gateway-boilerplate/internal/interceptors"
	"github.com/anhnmt/golang-gateway-boilerplate/internal/server"
	"github.com/anhnmt/golang-gateway-boilerplate/internal/service/userservice"
	"github.com/anhnmt/golang-gateway-boilerplate/pkg/db"
	"github.com/anhnmt/golang-gateway-boilerplate/pkg/redis"
)

// Injectors from wire.go:

func InitServer(ctx context.Context) (*server.Server, error) {
	option := interceptors.New()
	service := userservice.New()
	transcoder, err := gateway.New(option, service)
	if err != nil {
		return nil, err
	}
	universalClient, err := redis.NewRedis(ctx)
	if err != nil {
		return nil, err
	}
	client, err := db.NewDatabase(ctx, universalClient)
	if err != nil {
		return nil, err
	}
	serverServer := server.New(transcoder, universalClient, client)
	return serverServer, nil
}
